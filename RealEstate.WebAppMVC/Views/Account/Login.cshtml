@using RealEstate.ViewModels.WebMVC
@model LoginViewModel
@{
    ViewBag.Title = "Вход";
}

@section css{
    <style>
        #Google, #Facebook, #Twitter, #Instagram, #LinkedIn {
            background-repeat: no-repeat;
            width: 32px;
            height: 33px;
            border-style: none;
            background-position: center;
        }

        #Google {
            background-image: url(/ExternalLoginIcons/googleLoginIcon.png);
            background-size: 32px 33px;
        }

        #Facebook {
            background-image: url(/ExternalLoginIcons/facebookIcon.png);
            background-size: 50px 50px;
        }

        #Twitter {
            background-image: url(/ExternalLoginIcons/twitterIcon.png);
            background-size: 35px 36.3px;
        }

        #Instagram {
            background-image: url(/ExternalLoginIcons/instagramIcon.jpg);
            background-size: 31.7px 33px;
        }

        #LinkedIn {
            background-image: url(/ExternalLoginIcons/linkedinIcon.png);
            background-size: 32px 33px;
        }

        .loginForm {
            margin-top: 10px;
        }

        .registerLink {
            text-decoration: underline;
        }

        .g-recaptcha {
            transform: scale(1.15,1);
            margin-left: 24px;
        }

        @@media only screen and (max-width: 462px) {
            .g-recaptcha {
                transform: scale(0.99,1);
                margin-left: -2px;
            }            
        }
    </style>
}


<div role="main" class="main pgl-bg-grey">
    <!-- Begin page top -->
    <section class="page-top">
        <div class="container">
            <div class="page-top-in">
                <h2><span>Вход в системата</span></h2>
            </div>
        </div>
    </section>
    <section class="login">
        <div class="container">
            <div class="col-md-4 col-md-offset-4 loginForm">
                @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { role = "form" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.Label("Потребителско име", new { @class = "control-label" })
                        @Html.TextBoxFor(m => m.UserName, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.UserName, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.Label("Парола", new { @class = "control-label" })
                        @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                    </div>

                    <div class="g-recaptcha not-ready"></div>
                    @Html.ValidationMessageFor(m => m.reCaptcha, "", new { @class = "text-danger" })

                    <div style="margin: 5px 5px 0 5px;">
                        @Html.CheckBoxFor(m => m.RememberMe, new { id = "rememberMe" })
                        <label for="rememberMe">Запомни ме?</label>
                    </div>

                    <div class="form-group">
                        <button type="submit" class="btn btn-block btn-primary">Вход</button>
                    </div>
                }

                <div class="form-group">
                    <section id="socialLoginForm">
                        @Html.Partial("_ExternalLoginsListPartial", new ExternalLoginListViewModel { ReturnUrl = ViewBag.ReturnUrl })
                    </section>
                </div>
                <p>
                    <b>@Html.ActionLink("Нямате регистрация ?", "Register", new { }, new { @class = "registerLink" })</b>
                </p>
                @* Enable this once you have account confirmation enabled for password reset functionality
                    <p>
                        @Html.ActionLink("Forgot your password?", "ForgotPassword")
                    </p>*@
            </div>
        </div>
    </section>
</div>

@Html.Partial("RequestStatusDropModal")

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(document).ready(function () {

            var confirmationType = getParam('confirm');
            if (confirmationType === 'email') {
                createAndShowModal({
                    title: "Потвърждаване на акаунт",
                    body:
                        "Вашият акаунт беше създаден успешно, но е нужно да бъде потвърден. </br> " +
                        "Потвърдете го като влезете на е-мейл адресът си. </br>  " +
                        "Там е изпратен е-мейл от който ще потвърдите потребителят си."
                });
            } else if (confirmationType === 'sms') {
                createAndShowModal({
                    title: "Потвърждаване на акаунт",
                    body:
                        "Вашият акаунт беше създаден успешно, но е нужно да бъде потвърден. </br> " +
                        "На телефонът, който сте въвели ще получите код за потвърждение."
                });
            }

            function getParam(param) {
                return new URLSearchParams(window.location.search).get(param);
            }
        });
    </script>
}